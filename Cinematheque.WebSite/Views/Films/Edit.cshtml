@using Cinematheque.WebSite.Extensions
@using Cinematheque.Utils
@using Cinematheque.Data
@model Cinematheque.WebSite.Models.FilmView

@{
    ViewBag.Title = "Edit film";
}

<h2>Edit</h2>

@using (Html.BeginForm("DoEdit", "Films", FormMethod.Post, new { id = Model.ID, enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <hr />
    <table>
        <tr>
            <td>
                <img width="340" height="500" src="/images/films/@Model.PosterFileName" />

                <label for="file">Upload New Poster:</label>
                <input type="file" name="file" id="file" /><br><br>
                <br><br>
                @Html.ValidationMessageFor(model => model.PosterFileName, "", new { @class = "text-danger" })
            </td>

            <td width="700">
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="date" value="@Model.ReleaseDate.ToString("yyyy-MM-dd")" name="ReleaseDate" />
                            @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Countries, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @foreach (var c in CountryList.MainFilmCountriesNames.ConvertToCheckBoxItems(Model.Countries))
                            {
                                <div>
                                    <label>@c.Text</label>
                                    <input type="checkbox" name="Countries" value="@c.Value" checked="@c.Selected" />
                                </div>
                            }

                            @Html.ValidationMessageFor(model => model.Countries, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DirectorName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.DirectorID,
                                                  DataHolder.DaoDirector.FindAll().ConvertToListItems(),
                                                  new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DirectorID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Actors, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <table id="actors">
                                @foreach (var a in Model.Actors)
                                {
                                    <tr id="@a.Key">
                                        <td style="text-align:left; width:200px">
                                            <span class="actor-text">@a.Value</span>
                                            <input type="hidden" name="Actors" value="@a.Key" />
                                        </td>
                                        <td>
                                            <span class="btn-remove-actor" style="cursor:pointer">
                                                <img width="10" height="10" src="~/Content/Images/remove.jpg" />
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </table>

                            <select id="select-actor">
                                @foreach (var a in DataHolder.AvailableActors(DataHolder.GetFilmById(Model.ID)))
                                {
                                    <option value="@a.ID">@a.GetFullName()</option>
                                }
                            </select>

                            <button type="button" id="btn-add-actor" style="cursor:pointer">Add actor</button>

                            @Html.ValidationMessageFor(model => model.Actors, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Genres, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <table id="genres">
                                @foreach (var a in Model.Genres)
                                {
                                    <tr id="@a.ID">
                                        <td style="text-align:left; width:200px">
                                            <span class="genre-text">@a.Name</span>
                                            <input type="hidden" name="Genres" value="@a.ID" />
                                        </td>
                                        <td>
                                            <span class="btn-remove-genre" style="cursor:pointer">
                                                <img width="10" height="10" src="~/Content/Images/remove.jpg" />
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </table>

                            <select id="select-genre">
                                @foreach (var g in DataHolder.AvailableGenres(DataHolder.GetFilmById(Model.ID)))
                                {
                                    <option value="@g.ID">@g.Name</option>
                                }
                            </select>

                            <button type="button" id="btn-add-genre" style="cursor:pointer">Add genre</button>

                            @Html.ValidationMessageFor(model => model.Genres, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IMDbRating, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IMDbRating, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IMDbRating, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <textarea rows="10" cols="30" name="Description">
                                @Model.Description
                            </textarea>
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    </table>

    @section scripts {
        <script>
            $('#actors').on('click', '.btn-remove-actor', function (e) {
                if (confirm('Do you want to delete actor?')) {

                    var tr = $(e.target).closest('tr');
                    var text = tr.find('.actor-text').text();
                    var id = tr.find('input:hidden').val();

                    $('#select-actor').append(new Option(text, id));
                    tr.remove();
                }
            });

            $('#btn-add-actor').click(function () {
                var opt = $('#select-actor').find('option:selected');

                $('#actors').append(
                    `<tr>
                             <td style="text-align:left; width:200px">
                                 <span class="actor-text">${opt.text()}</span>
                                 <input type="hidden" name="Actors" value="${opt.val()}" />
                             </td>
                             <td>
                                 <span class="btn-remove-actor" style="cursor:pointer">
                                      <img width="10" height="10" src="@Url.Content("~/Content/Images/remove.jpg")" />
                                 </span>
                             </td>
                        </tr>`);

                opt.remove();
            });

            $('#genres').on('click',  '.btn-remove-genre', function (e) {
                if (confirm('Do you want to delete genre?')) {

                    var tr = $(e.target).closest('tr');
                    var text = tr.find('.genre-text').text();
                    var id = tr.find('input:hidden').val();

                    $('#select-genre').append(new Option(text, id));
                    tr.remove();
                }
            });

            $('#btn-add-genre').click(function () {
                var opt = $('#select-genre').find('option:selected');

                $('#genres').append(
                    `<tr>
                             <td style="text-align:left; width:200px">
                                 <span class="genre-text">${opt.text()}</span>
                                 <input type="hidden" name="Genres" value="${opt.val()}" />
                             </td>
                             <td>
                                 <span class="btn-remove-genre" style="cursor:pointer">
                                     <img width="10" height="10" src="@Url.Content("~/Content/Images/remove.jpg")" />
                                 </span>
                             </td>
                        </tr>`);
            });

        </script>
   }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
